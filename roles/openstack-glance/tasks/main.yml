---
- name: Ensure relavant packages are installed
  yum: "name={{ item }} state=installed"
  with_items: 
  - openstack-glance 
  - python-glanceclient

- name: Configure glance-api
  template: |
    dest=/etc/glance/glance-api.conf
    src=glance-api.conf
    backup=yes
  notify: Restart glance-api service

- name: Configure glance-registry
  template: |
    dest=/etc/glance/glance-registry.conf
    src=glance-registry.conf
    backup=yes
  notify: Restart glance-registry service

- name: Create the glance database
  mysql_db: name={{ glance_db }} login_user=root login_password={{ MYSQL_ROOT_PASSWORD }}
- name: Ensure glance database user exist
  mysql_user: |
    name={{ glance_db_user }}
    password={{ GLANCE_DBPASS }}
    host={{ item }}
    priv={{ glance_db }}.*:ALL
    login_host={{ db_host }}
    login_user=root
    login_password={{ MYSQL_ROOT_PASSWORD }}
  with_items:
  - localhost
  - "%"

- name: Change ownership of all files to glance
  file: path=/etc/glance recurse=yes owner=glance group=glance state=directory

- name: DB sync for glance
  sudo: yes
  sudo_user: glance
  shell: |
    creates=/etc/glance/db.synced
    /usr/bin/glance-manage db_sync
    date >> /etc/glance/db.synced

- name: "Ensure the 'glance' user exists"
  keystone_user: >
    user=glance password={{ GLANCE_PASS }} email={{ ADMIN_EMAIL }} tenant=service
    token={{ KEYSTONE_ADMIN_TOKEN }}
    endpoint=http://{{ keystone_host }}:{{ keystone_admin_port }}/v2.0
  delegate_to: "{{ keystone_host }}"

- name: "Ensure the 'admin' role exists"
  keystone_user: >
    role=admin user=glance tenant=service
    token={{ KEYSTONE_ADMIN_TOKEN }}
    endpoint=http://{{ keystone_host }}:{{ keystone_admin_port }}/v2.0
  delegate_to: "{{ keystone_host }}"

- name: Create a service entry for the OpenStack Image Service
  shell: |
    if ! keystone service-get glance
    then 
      keystone service-create --name=glance --type=image --description="OpenStack Image Service"
    fi
  environment: token_auth_env
  delegate_to: "{{ keystone_host }}"

- name: Check OpenStack Image Service API endpoint exists
  shell: "keystone --os-username=admin --os-password={{ ADMIN_PASS }} --os-auth-url=http://{{ keystone_host }}:{{ keystone_admin_port }}/v2.0 --os-tenant-name=admin endpoint-get --service=image"
  register: check_endpoint_result
  ignore_errors: True
  delegate_to: "{{ keystone_host }}"

- name: Specify API endpoints for image service
  when: check_endpoint_result.rc != 0
  shell: |
    export SERVICE_ID=$(keystone service-list | awk '/ image / {print $2}')
    keystone endpoint-create --service-id=${SERVICE_ID} --publicurl=http://{{ glance_host }}:{{ glance_port }}/v2.0 --internalurl=http://{{ glance_host }}:{{ glance_port }}/v2.0 --adminurl=http://{{ glance_host }}:{{ glance_port }}/v2.0
  environment: token_auth_env
  delegate_to: "{{ keystone_host }}"

- name: Enable and start the image services
  service: name={{ item }} enabled=yes state=started
  with_items:
  - openstack-glance-api
  - openstack-glance-registry
